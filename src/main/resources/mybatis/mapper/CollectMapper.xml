<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shang.news.mapper.CollectMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.shang.news.entities.Collect">
        <id column="id" property="id" />
        <result column="related_id" property="relatedId" />
        <result column="relation_user" property="relationUser" />
        <result column="collect_time" property="collectTime" />
        <result column="createtime" property="createtime" />
        <result column="updatetime" property="updatetime" />
        <result column="collect_flag" property="collectFlag" />
    </resultMap>
    
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMapWithContent" type="com.shang.news.entities.Collect">
        <id column="id" property="id" />
        <result column="related_id" property="relatedId" />
        <result column="relation_user" property="relationUser" />
        <result column="collect_time" property="collectTime" />
        <result column="createtime" property="createtime" />
        <result column="updatetime" property="updatetime" />
        <result column="collect_flag" property="collectFlag" />
        <association property="content" javaType="com.shang.news.entities.Content">
        	<id column="id" property="id" />
	        <result column="title" property="title" />
	        <result column="author_id" property="authorId" />
	        <result column="author_name" property="authorName" />
	        <result column="sendtime" property="sendtime" />
	        <result column="content" property="content" />
	        <result column="createtime" property="createtime" />
	        <result column="updatetime" property="updatetime" />
	        <result column="creater" property="creater" />
	        <result column="updater" property="updater" />
	        <result column="company_id" property="companyId" />
	        <result column="company_name" property="companyName" />
	        <result column="news_type" property="newsType" />
	        <association property="user" javaType="com.shang.news.entities.User" select="com.shang.news.mapper.UserMapper.selectUserById" column="author_id">
        	</association>
	        <collection property="pics" column="{businesskey = related_id, companyId = company_id}" select="com.shang.news.mapper.AttachmentMapper.getAttachmentPics" ofType="com.shang.news.entities.Attachment">
	        </collection>
        </association>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, related_id, relation_user, collect_time, createtime, updatetime, collect_flag
    </sql>
    
    <select id="getCollectNews" parameterType="String" resultMap="BaseResultMapWithContent">
    	select ct.id, ct.related_id, ct.relation_user, ct.collect_time, ct.createtime, ct.updatetime,c.title,c.content,c.sendtime,c.author_id,c.company_id,co.company_name,c.news_type, u.username as author_name from news_collect ct, news_content c, news_company co, news_user u where u.id = c.author_id and co.id = c.company_id and ct.related_id = c.id and ct.collect_flag = 1 and relation_user = #{userId} and c.delete_flag = 1 order by ct.collect_time desc, ct.id desc limit 0, 10
    </select>
    
    <select id="checkIfCollected" parameterType="Map" resultMap="BaseResultMap">
    	select id, related_id, relation_user, collect_time, createtime, updatetime, collect_flag from news_collect where relation_user = #{userId} and related_id = #{newsId}
    </select>
    
    <select id="morecollects" parameterType="Map" resultMap="BaseResultMapWithContent">
    	select m.* from((select ct.id, ct.related_id, ct.relation_user, ct.collect_time, ct.createtime, ct.updatetime,c.title,c.content,c.sendtime,c.author_id,c.company_id,co.company_name,c.news_type, u.username as author_name from news_collect ct, news_content c, news_company co, news_user u where u.id = c.author_id and co.id = c.company_id and ct.related_id = c.id and ct.collect_flag = 1 and relation_user = #{userId} and ct.collect_time =(select nc.collect_time from news_collect nc where nc.id = #{collectId}) and ct.id &lt; #{collectId} and c.delete_flag = 1 order by ct.collect_time desc, ct.id desc)
		union all
		(select ct.id, ct.related_id, ct.relation_user, ct.collect_time, ct.createtime, ct.updatetime,c.title,c.content,c.sendtime,c.author_id,c.company_id,co.company_name,c.news_type, u.username as authorName from news_collect ct, news_content c, news_company co, news_user u where u.id = ct.relation_user and co.id = c.company_id and ct.related_id = c.id and ct.collect_flag = 1 and relation_user = #{userId} and ct.collect_time &lt;(select nc.collect_time from news_collect nc where nc.id = #{collectId}) and c.delete_flag = 1 order by ct.collect_time desc, ct.id desc)) m order by m.collect_time desc, m.id desc limit 0, 10
    	<!-- select ct.id, ct.related_id, ct.relation_user, ct.collect_time, ct.createtime, ct.updatetime,c.* from news_collect ct, news_content c where ct.related_id = c.id and ct.collect_flag = 1 and relation_user = #{userId}
    	and ct.collect_time &lt;=(select nc.collect_time from news_collect nc where nc.id = #{collectId}) and ct.id != #{collectId}  order by ct.collect_time desc limit 0, 10 -->
    </select>

</mapper>
